{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/transformDate.js","actions/calendar.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFAB.js","components/ui/DeletedFAB.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","checkingFinish","type","login","user","payload","Logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","RFName","REmail","RPassword1","RPassword2","formRegisterValues","handleRegisterInputChange","LEmail","LPassword","formLoginValues","handleLoginInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","transformDate","events","map","event","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","Navbar","useSelector","state","auth","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","Modal","setAppElement","now","minutes","seconds","add","nowPlus","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","formValues","useEffect","closeModal","isOpen","onRequestClose","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","AddNewFAB","DeletedFAB","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","style","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","components","PrivateRoute","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","initState","rootReducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da9be9aa.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL\r\n\r\nexport const fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`\r\n\r\n    if ( method === 'GET' ) {\r\n\r\n        return fetch( url )\r\n\r\n    } else {\r\n\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        } )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`\r\n    const token = localStorage.getItem( 'token' ) || ''\r\n\r\n    if ( method === 'GET' ) {\r\n\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        } )\r\n\r\n    } else {\r\n\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        } )\r\n\r\n    }\r\n\r\n}","export const types = {\r\n\r\n    uiOpenModal: '[UI] Opend modal',\r\n    uiCloseModal: '[UI] Close modal',\r\n\r\n    eventSetActive: '[Calendar] Set active',\r\n    eventStartddNew: '[Calendar] Start add new',\r\n    eventAddNew: '[Calendar] Add new',\r\n    eventClearActiveEvent: '[Calendar] Clear active event',\r\n    eventUpdated: '[Calendar] Updated event',\r\n    eventDeleted: '[Calendar] Deleted event',\r\n    eventLoaded: '[Calendar] Event loaded',\r\n    eventClearStore: '[Calendar] Event clear store',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authRegister: '[auth] Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n}","import Swal from \"sweetalert2\"\r\n\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\"\r\n\r\nexport const stratLogin = ( email, password ) => {\r\n\r\n    return async ( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' )\r\n        const body = await resp.json()\r\n\r\n        if ( body.ok ) {\r\n\r\n            localStorage.setItem( 'token', body.token )\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() )\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n\r\n        } else {\r\n\r\n            Swal.fire('Error', body.msg, 'error')\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startRegister = ( name, email, password ) => {\r\n\r\n    return async ( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth/new', { name, email, password }, 'POST' )\r\n        const body = await resp.json()\r\n\r\n        if ( body.ok ) {\r\n\r\n            localStorage.setItem( 'token', body.token )\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() )\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n            \r\n        } else {\r\n\r\n            Swal.fire('Error', body.msg, 'error')\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startChecking = () => {\r\n\r\n    return async ( dispatch ) => {\r\n\r\n        const resp = await fetchConToken( 'auth/renew' )\r\n        const body = await resp.json()\r\n\r\n        if ( body.ok ) {\r\n\r\n            localStorage.setItem( 'token', body.token )\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() )\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n            \r\n        } else {\r\n            \r\n            dispatch( checkingFinish() )\r\n\r\n        }        \r\n\r\n    }\r\n\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish })\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogout = () => {\r\n\r\n    return ( dispatch ) => {\r\n\r\n        localStorage.clear()\r\n\r\n        dispatch( Logout() )\r\n\r\n    }\r\n    \r\n}\r\n\r\nconst Logout = () => ({\r\n\r\n    type: types.authLogout\r\n\r\n})","import { useState } from \"react\"\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => setValues(initialState);\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value,\r\n        });\r\n    };\r\n\r\n    return [values, handleInputChange, reset, setValues];\r\n\r\n};","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { startRegister, stratLogin } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nconst LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        RFName: 'Jose',\r\n        REmail: 'jose@gmail.com',\r\n        RPassword1: '123456',\r\n        RPassword2: '123456'\r\n    })\r\n    const { RFName, REmail, RPassword1, RPassword2 } = formRegisterValues\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        LEmail: 'samuel@gmail.com',\r\n        LPassword: '123456'\r\n    })\r\n    const { LEmail, LPassword } = formLoginValues\r\n\r\n    const handleLoginSubmit = ( e ) => {\r\n\r\n        e.preventDefault();\r\n\r\n        dispatch( stratLogin( LEmail, LPassword ) )\r\n\r\n    };\r\n\r\n    const handleRegisterSubmit = ( e ) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if ( RPassword1 !== RPassword2 ) {\r\n\r\n            Swal.fire( 'Error', 'Las contrasenas deben ser iguales', 'error' )\r\n\r\n        }\r\n\r\n        dispatch( startRegister( RFName, REmail, RPassword1 ) )\r\n\r\n    };\r\n\r\n    return (\r\n\r\n        <div className='main-conatiner'>\r\n\r\n            <div className='conatiner-forms'>\r\n\r\n                <div className='login-conatiner'>\r\n\r\n                    <form onSubmit={ handleLoginSubmit }>\r\n\r\n                        <input\r\n                            type='email'\r\n                            name='LEmail'\r\n                            placeholder='email@gmail.com'\r\n                            value={ LEmail }\r\n                            onChange={ handleLoginInputChange }\r\n                        />\r\n                        <input\r\n                            type='password'\r\n                            name='LPassword'\r\n                            placeholder='********'\r\n                            value={ LPassword }\r\n                            onChange={ handleLoginInputChange }\r\n                        />\r\n                        <button \r\n                            type='submit'\r\n                            className='btn blue-ghost'\r\n                        >\r\n                            Sing in\r\n                        </button>\r\n\r\n                    </form>\r\n\r\n                </div>\r\n\r\n                <div className='text-container2'>\r\n\r\n                    <h1>Login</h1>\r\n                    <h1>or</h1>\r\n                    <h1>Register</h1>\r\n\r\n                </div>\r\n\r\n                <div className='register-container'>\r\n\r\n                    <form onSubmit={ handleRegisterSubmit }>\r\n\r\n                        <input\r\n                            type='text'\r\n                            name='RFName'\r\n                            placeholder='Juan'\r\n                            value={ RFName }\r\n                            onChange={ handleRegisterInputChange }\r\n                        />\r\n                        <input\r\n                            type='email'\r\n                            name='REmail'\r\n                            placeholder='email@gmail.com'\r\n                            value={ REmail }\r\n                            onChange={ handleRegisterInputChange }\r\n                        />\r\n                        <input\r\n                            type='password'\r\n                            name='RPassword1'\r\n                            placeholder='*******'\r\n                            value={ RPassword1 }\r\n                            onChange={ handleRegisterInputChange }\r\n                        />\r\n                        <input\r\n                            type='password'\r\n                            name='RPasswor2'\r\n                            placeholder='Rodriguez'\r\n                            value={ RPassword2 }\r\n                            onChange={ handleRegisterInputChange }\r\n                        />\r\n                        <button \r\n                            type='submit'\r\n                            className='btn white-ghost'\r\n                        >\r\n                            Sign up\r\n                        </button>\r\n\r\n                    </form>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className='text-container1'>\r\n\r\n                <h1>Login</h1>\r\n                <h1>or</h1>\r\n                <h1>Register</h1>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default LoginScreen;\r\n","import moment from \"moment\"\r\n\r\nexport const transformDate = ( events = [] ) => {\r\n\r\n    return events.map( event => ({\r\n\r\n        ...event,\r\n        end: moment( event.end ).toDate(),\r\n        start: moment( event.start ).toDate()\r\n\r\n    }) )\r\n\r\n}","import Swal from \"sweetalert2\";\r\n\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { transformDate } from \"../helpers/transformDate\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { name, uid } = getState().auth\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken( 'events', event, 'POST' )\r\n            const body = await resp.json()\r\n\r\n            if (body.ok) {\r\n\r\n                event.id = body.evento.id\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                }\r\n                \r\n                dispatch( eventAddNew( event ) )\r\n\r\n            }\r\n\r\n\r\n        } catch (err) {\r\n            \r\n            console.log(err)\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nconst eventAddNew = ( event ) => ({\r\n\r\n    type: types.eventAddNew,\r\n    payload: event\r\n\r\n});\r\n\r\nexport const eventSetActive = ( event ) => ({\r\n\r\n    type: types.eventSetActive,\r\n    payload: event\r\n\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n\r\n    type: types.eventClearActiveEvent    \r\n\r\n});\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n\r\n    return async ( dispatch ) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken( `events/${ event.id }`, event, 'PUT' )\r\n            const body = await resp.json()\r\n\r\n            if ( body.ok ) {\r\n\r\n                dispatch( eventUpdated( event ) )\r\n\r\n            } else {\r\n\r\n                Swal.fire( 'Error', body.msg, 'error' )\r\n\r\n            }\r\n\r\n        } catch (err) {\r\n         \r\n            console.log(err)\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const eventUpdated = ( event ) => ({\r\n\r\n    type: types.eventUpdated,\r\n    payload: event\r\n\r\n});\r\n\r\nexport const eventStartDeleted = ( event ) => {\r\n\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { id } = getState().calendar.activeEvent\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken( `events/${ id }`, {}, 'DELETE' )\r\n            const body = await resp.json()\r\n\r\n            if ( body.ok ) {\r\n\r\n                dispatch( eventDeleted() )\r\n\r\n            } else {\r\n\r\n                Swal.fire( 'Error', body.msg, 'error' )\r\n\r\n            }\r\n\r\n        } catch (err) {\r\n         \r\n            console.log(err)\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n\r\n    type: types.eventDeleted\r\n\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n\r\n    return async ( dispatch ) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken( 'events' )\r\n            const body = await resp.json()\r\n            const events = transformDate( body.eventos )\r\n    \r\n            dispatch( eventLoaded( events ) )\r\n\r\n        } catch (err) {\r\n\r\n            console.log(err)\r\n            \r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nconst eventLoaded = ( events ) => ({\r\n\r\n    type: types.eventLoaded,\r\n    payload: events\r\n\r\n})\r\n\r\nexport const eventClearStore = () => ({\r\n\r\n    type: types.eventClearStore\r\n\r\n})","import React from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { eventClearStore } from '../../actions/calendar';\r\n\r\nconst Navbar = () => {\r\n\r\n    const { name } = useSelector( state => state.auth );\r\n    const dispatch = useDispatch();\r\n\r\n    const onClick = () => {\r\n\r\n        dispatch( eventClearStore() )\r\n        dispatch( startLogout() )\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <nav className='container'>\r\n\r\n            <h3>{ name }</h3>\r\n\r\n            <button\r\n                className='btn white-ghost'\r\n                onClick={ onClick }\r\n            >\r\n                <i className='fas fa-sign-out-alt'></i> Logout\r\n            </button>\r\n            \r\n        </nav>\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default Navbar;\r\n","export const messages = {\r\n    allDay: 'Todo el dia',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Dia',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver mas (${total})`\r\n};","import React from 'react';\r\n\r\nconst CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user:{ name } } = event;\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            <span>{ title }</span> <br/>\r\n            <small>- { name }</small>\r\n            \r\n        </div>\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default CalendarEvent;\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\n\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/calendar';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    start: now.toDate(),\r\n    end: nowPlus.toDate(),\r\n    notes: ''\r\n};\r\n\r\nconst CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector( state => state.ui );\r\n    const { activeEvent } = useSelector( state => state.calendar );\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus.toDate());\r\n\r\n    const [ formValues, handleInputChange, , setValues ] = useForm( initEvent )\r\n    const { title, notes, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n\r\n        if ( activeEvent ){\r\n\r\n            setValues( activeEvent );\r\n\r\n        } else {\r\n\r\n            setValues( initEvent );\r\n\r\n        }\r\n\r\n    }, [activeEvent, setValues]);\r\n\r\n    const closeModal = () => {\r\n\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() );\r\n        setValues( initEvent );\r\n\r\n    };\r\n\r\n    const onStartDateChange = (e) => {\r\n\r\n        setDateStart(e);\r\n\r\n        setValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n\r\n    };\r\n\r\n    const onEndDateChange = (e) => {\r\n\r\n        setDateEnd(e);\r\n\r\n        setValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n\r\n    };\r\n\r\n    const onSubmit = ( e ) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n\r\n        if (momentStart.isSameOrAfter( momentEnd )){\r\n            \r\n            return Swal.fire('Error', 'La hora de fin del evento debe ser mayor a la de inicio', 'error');\r\n\r\n        };\r\n\r\n        if (title.trim().length < 2){\r\n\r\n            return Swal.fire('Error', 'El titulo debe tener por lo menos 2 letras', 'error');\r\n\r\n        };\r\n\r\n        if ( activeEvent ){\r\n\r\n            dispatch( eventStartUpdate( formValues ) );\r\n\r\n        } else {\r\n\r\n            dispatch( eventStartAddNew( formValues ) );\r\n            \r\n        };\r\n\r\n\r\n        closeModal();\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={ modalOpen }\r\n            // onAfterOpen={ afterOpenModal }\r\n            onRequestClose={closeModal}\r\n            closeTimeoutMS={200}\r\n            className='modal'\r\n            overlayClassName='modal-fondo'\r\n        >\r\n\r\n            <h1 className='title-modal'>{ ( activeEvent ) ? 'Editar' : 'Nuevo evento' }</h1>\r\n\r\n            <form className='form-container' onSubmit={onSubmit}>\r\n\r\n                <div>\r\n\r\n                    <p>Titulo</p>\r\n                    <input\r\n                        type='text'\r\n                        name='title'\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                </div>\r\n                <div>\r\n\r\n                    <p>Fecha y hora de inicio</p>\r\n                    <DateTimePicker\r\n                        onChange={onStartDateChange}\r\n                        value={dateStart}\r\n                    />\r\n                    {/* <input type='time' onChange={ onStartDateChange }/> */}\r\n\r\n                </div>\r\n                <div>\r\n\r\n                    <p>Fecha y hora de cierre</p>\r\n                    <DateTimePicker\r\n                        onChange={onEndDateChange}\r\n                        value={dateEnd}\r\n                        minDate={dateStart}\r\n                    />\r\n                    {/* <input type='time'/> */}\r\n\r\n                </div>\r\n                <div>\r\n\r\n                    <p>Notas</p>\r\n                    <textarea\r\n                        type='text'\r\n                        name='notes'\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                </div>\r\n\r\n                <button\r\n                    type='submit'\r\n                    className='btn blue-ghost'\r\n                >\r\n                    <i className='far fa-save'></i> Guardar\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </Modal>\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default CalendarModal;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nconst AddNewFAB = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onClick = () => {\r\n\r\n        dispatch( uiOpenModal() );\r\n        \r\n    };\r\n\r\n    return (\r\n\r\n        <button className='FABN' onClick={ onClick }>\r\n            <i className='fas fa-plus'></i>\r\n        </button>\r\n    );\r\n\r\n};\r\n\r\nexport default AddNewFAB;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDeleted } from '../../actions/calendar';\r\n\r\nconst DeletedFAB = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onClick = () => {\r\n\r\n        dispatch( eventStartDeleted() );\r\n        \r\n    };\r\n\r\n    return (\r\n\r\n        <button className='FABD' onClick={ onClick }>\r\n            <i className='fas fa-trash'></i>\r\n        </button>\r\n    );\r\n\r\n};\r\n\r\nexport default DeletedFAB;\r\n","import React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Navbar from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport CalendarEvent from './CalendarEvent';\r\nimport CalendarModal from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/calendar';\r\nimport AddNewFAB from '../ui/AddNewFAB';\r\nimport DeletedFAB from '../ui/DeletedFAB';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst CalendarScreen = () => {\r\n\r\n    const { events, activeEvent } = useSelector( state => state.calendar );\r\n    const { uid } = useSelector( state => state.auth );\r\n    const dispatch = useDispatch();\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch( eventStartLoading() )\r\n\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = ( e ) => {\r\n\r\n        dispatch( uiOpenModal() );\r\n\r\n    };\r\n\r\n    const onSelectEvent = ( e ) => {\r\n\r\n        dispatch( eventSetActive( e ) );\r\n\r\n    };\r\n\r\n    const onViewChange = ( e ) => {\r\n\r\n        setLastView( e );\r\n        localStorage.setItem('lastView', e);\r\n\r\n    };\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367cf7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        };\r\n\r\n        return {\r\n            style\r\n        };\r\n\r\n    };\r\n\r\n    const onSelectSlot = () => {\r\n\r\n        dispatch( eventClearActiveEvent() );\r\n\r\n    };\r\n\r\n    return (\r\n\r\n        <div className='calendar-screen'>\r\n\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                view={ lastView }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFAB/>\r\n\r\n            { activeEvent && <DeletedFAB/> }\r\n\r\n            <CalendarModal/>\r\n            \r\n        </div>\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default CalendarScreen;\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({\r\n\r\n    auth,\r\n    component: Component,\r\n    ...rest\r\n\r\n}) => {\r\n\r\n    return (\r\n\r\n        <Route \r\n            {...rest}\r\n            component={\r\n\r\n                (props) => (\r\n\r\n                    (auth)\r\n                        ? <Component {...props}/>\r\n                        : <Redirect to='/login'/>\r\n\r\n                )\r\n\r\n            }\r\n        />\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default PrivateRoute\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nconst PublicRoute = ({\r\n\r\n    auth,\r\n    component: Component,\r\n    ...rest\r\n\r\n}) => {\r\n\r\n    return (\r\n\r\n        <Route\r\n            {...rest}\r\n            component={\r\n\r\n                (props) => (\r\n\r\n                    (auth)\r\n                        ? <Redirect to='/'/>\r\n                        : <Component {...props }/>\r\n\r\n                )\r\n\r\n            }\r\n        />\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default PublicRoute\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport { startChecking } from \"../actions/auth\";\r\nimport LoginScreen from \"../components/auth/LoginScreen\";\r\nimport CalendarScreen from \"../components/calendar/CalendarScreen\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport PublicRoute from \"./PublicRoute\";\r\n\r\nconst AppRouter = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { checking, uid } = useSelector( state => state.auth );\r\n\r\n  useEffect(() => {\r\n\r\n    dispatch( startChecking() )\r\n\r\n  }, [dispatch])\r\n\r\n  if ( checking ) {\r\n    return ( <h1>Wait...</h1> )\r\n  }\r\n\r\n   return (\r\n\r\n        <Router>\r\n\r\n            <div>\r\n\r\n            <Switch>\r\n\r\n            <PublicRoute  auth={ !!uid } component={LoginScreen} exact path=\"/login\"/>\r\n            <PrivateRoute  auth={ !!uid } component={CalendarScreen} exact path=\"/\" />\r\n\r\n            <Redirect to='/'/>\r\n\r\n            </Switch>\r\n\r\n            </div>\r\n\r\n        </Router>\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default AppRouter;","import { types } from \"../types/types\";\r\n\r\nconst initState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = ( state = initState, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.authLogin:        \r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            };\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n// {\r\n//     _id: '......',\r\n//     title: '......',\r\n//     start: moment().toDate(),\r\n//     end: moment().add( 2, 'hours' ).toDate(),\r\n//     notes: '......',\r\n//     user: {\r\n//         _id: '.......',\r\n//         name: '.......'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n\r\n    events: [],\r\n    activeEvent: null\r\n\r\n}\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.eventSetActive:   \r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            };\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n\r\n                    event => ( event.id === action.payload.id ) ? action.payload : event\r\n\r\n                )\r\n            };\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n\r\n                    event => ( event.id !== state.activeEvent.id )\r\n\r\n                ),\r\n                activeEvent: null\r\n            };\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n\r\n        case types.eventClearStore:\r\n            return {\r\n                ...initialState\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n\r\n    modalOpen: false\r\n\r\n};\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.uiOpenModal:        \r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            };\r\n    \r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n};","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducers = combineReducers({\r\n\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n\r\n});","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { rootReducers } from \"../reducers/rootReducers\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n\r\n    rootReducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n\r\n);","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport AppRouter from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nconst CalendarApp = () => {\r\n\r\n    return (\r\n\r\n        <Provider store={ store }>\r\n\r\n            <AppRouter/>\r\n\r\n        </Provider>\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default CalendarApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarApp from './CalendarApp';\n\nimport './styles/calendar-app.scss';\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}